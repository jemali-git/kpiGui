package neuralNetworks;

public class Vector {
	double[] array;

	public Vector(double[] vector) {
		this.array = vector;
	}

	public Vector add(Vector vector) {
		double[] newArray = new double[array.length];
		double[] array = vector.getArray();
		for (int i = 0; i < array.length; i++) {
			newArray[i] = this.array[i] + array[i];
		}
		return new Vector(newArray);
	}

	public Vector add(double scalar) {
		double[] newArray = new double[array.length];

		for (int i = 0; i < array.length; i++) {
			newArray[i] = this.array[i] + scalar;
		}
		return new Vector(newArray);
	}

	public Vector mul(Vector vector) {
		double[] newArray = new double[array.length];
		double[] array = vector.getArray();

		for (int i = 0; i < array.length; i++) {
			newArray[i] = this.array[i] * array[i];
		}
		return new Vector(newArray);
	}

	public Vector mul(double scalar) {
		double[] newArray = new double[array.length];

		for (int i = 0; i < array.length; i++) {
			newArray[i] = array[i] * scalar;
		}
		return new Vector(newArray);
	}

	public double sum() {
		double sum = 0;
		for (int i = 0; i < array.length; i++) {
			sum += array[i];
		}
		return sum;
	}

	public double[] getArray() {
		return array;
	}

	public void setArray(double[] array) {
		this.array = array;
	}
}
